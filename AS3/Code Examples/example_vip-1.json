{
   "target": {
      "hostname": "device.example.com"
   },
   "tenant-s1_testapplication": {
      "class": "Tenant",
      "remark": "App Name: testapplication",
      "app-s1_testapplication": {
         "class": "Application",
         "vs_testapplication_https": {
            "class": "Service_HTTPS",
            "serverTLS": [
               {
                  "bigip": "/Common/Shared/as3_ssl-client_wildcard_rsa_tls1.2"
               },
               {
                  "bigip": "/Common/Shared/as3_ssl-client_wildcard_rsa_tls1.2-1-"
               },
               {
                  "bigip": "/Common/Shared/as3_ssl-client_wildcard_rsa_tls1.2-2-"
               }
            ],
            "redirect80": false,
            "profileHTTP": {
               "bigip": "/Common/Shared/as3_http_encrypt-cookie_redirect"
            },
            "virtualPort": 443,
            "virtualAddresses": [
               "x.x.x.x"
            ],
            "snat": "auto",
            "profileMultiplex": {
               "bigip": "/Common/oneconnect"
            },
            "persistenceMethods": [
               "cookie",
               "source-address"
            ],
            "iRules": [
               {
                  "bigip": "/Common/Shared/as3_irule_asm_whitelist"
               }
            ],
            "policyWAF": {
               "bigip": "/Common/policyWAF_testapplication"
            },
            "profileDOS": {
               "use": "dos_testapplication"
            },
            "profileBotDefense": {
               "bigip": "/Common/bot_testapplication"
            },
            "securityLogProfiles": [
               {
                  "bigip": "/Common/Local_WAF_Logging"
               },
               {
                  "bigip": "/Common/Shared/telemetry_asm_security_log_profile"
               }
            ],
            "policyEndpoint": [
               {
                  "bigip": "/Common/Apex_Cust_Prod_HTTPS"
               }
            ],
            "pool": "pool_testapplication_2500"
         },
         "vs_testapplication_http": {
            "class": "Service_HTTP",
            "profileHTTP": {
               "bigip": "/Common/Shared/as3_http"
            },
            "virtualPort": 80,
            "virtualAddresses": [
               "x.x.x.x"
            ],
            "snat": "auto",
            "profileMultiplex": {
               "bigip": "/Common/oneconnect"
            },
            "persistenceMethods": [
               "cookie",
               "source-address"
            ],
            "iRules": [
               "irule_testapplication_redirect"
            ]
         },
         "pool_testapplication_2500": {
            "class": "Pool",
            "monitors": [
               {
                  "use": "monitor_testapplication_2500"
               }
            ],
            "members": [
               {
                  "servicePort": 2500,
                  "serverAddresses": [
                     "y.y.y.y"
                  ]
               }
            ]
         },
         "monitor_testapplication_2500": {
            "class": "Monitor",
            "monitorType": "http",
            "send": "GET images/logo.gif HTTP/1.1\r\nHost: \r\nConnection: Close\r\n\r\n",
            "receive": "HTTP/1.1 200 Ok",
            "interval": 5,
            "timeout": 16,
            "targetPort": 2500
         },
         "irule_testapplication_redirect": {
            "class": "iRule",
            "iRule": "when HTTP_REQUEST {\n switch -glob [string tolower [HTTP::host]] {\n \"testapplication\" -\n \"testapplication.hennepin.us\" {\n HTTP::redirect https://testapplication.hennepin.us }\n }\n}"
         },
         "dos_testapplication": {
            "class": "DOS_Profile",
            "application": {
               "heavyURLProtection": {
                  "automaticDetectionEnabled": false
               },
               "rateBasedDetection": {
                  "operationMode": "blocking",
                  "sourceIP": {
                     "rateLimitingMode": "rate-limit"
                  },
                  "url": {}
               },
               "stressBasedDetection": {
                  "operationMode": "blocking",
                  "thresholdsMode": "automatic",
                  "sourceIP": {
                     "rateLimitingMode": "rate-limit"
                  },
                  "deviceID": {
                     "rateLimitingMode": "rate-limit"
                  },
                  "url": {
                     "rateLimitingEnabled": false
                  },
                  "badActor": {
                     "detectionEnabled": true,
                     "signatureDetectionEnabled": true,
                     "mitigationMode": "standard"
                  }
               },
               "recordTraffic": {
                  "recordTrafficEnabled": true
               }
            }
         }
      }
   },
   "class": "ADC",
   "schemaVersion": "3.0.0",
   "id": "urn:uuid:33045210-3ab8-4636-9b2a-c98d22ab915d",
   "label": "",
   "remark": "LTM SSL Offload using existing Wildcard Certificate",
   "controls": {
      "class": "Controls",
      "userAgent": "vscode-f5/3.1.0",
      "archiveTimestamp": "2021-09-29T14:41:17.105Z"
   },
   "updateMode": "selective"
}
