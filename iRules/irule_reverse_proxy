############## PURPOSE ##############
# The purpose of this iRule is to take a source hostname, and map it to a
# specific destination URL and pool. This iRule can be used on any VIP, and just needs
# Data Groups created that have the source hostname in the name

############## INFORMATIONAL ##############
# This iRule grabs the first portion of the source traffic hostname, assigns
# it to variable "srcHost," then looks at the data group tied to that hostname to 
# determine the inside proxy URL. It then parses the proxy URL for the internal hostname, 
# which is used to determine the pool used.


############## SETUP ##############
# 1) Create String Data Group with naming convention "dg_srchostname" that maps source URIs to destination URLs
# 2) If request comes in using google.com or www.google.com, the Data Group would be named "dg_google"
# 3) In Data group, set a string of /test, with a value of the destination URL (ex. https://google.com/test)

# 4) Create String Data Group named "dg_map-host-to-pool" that maps destination hostnames to pools
# 5) In Data Group, set a string of insidehost.google.com, with a value of /Common/pool_testpool_https

when HTTP_REQUEST {
        set srcHost [substr [string tolower [URI::decode [HTTP::host]]] 0 "."]
        if { $srcHost eq "www" } {
            set $srcHost [substr [string tolower [URI::decode [HTTP::host]]] 4 "."] }
        else {
        set dstURL [class match -value [HTTP::uri] starts_with dg_${srcHost}]
#        log local0. "The value of variable dstURL is ${dstURL}"
        if { $dstURL starts_with "http://" } {
            set dstHost [string tolower [substr $dstURL 7 "/"]] }
        else {
            set dstHost [string tolower [substr $dstURL 8 "/"]] }
#        log local0. "The value of variable dstHost is ${dstHost}"
        HTTP::header replace [HTTP::host] $dstHost
        set dstPool [class match -value $dstHost eq dg_map-host-to-pool]
        pool $dstPool
  }
}
